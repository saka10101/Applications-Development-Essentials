{"version":3,"sources":["summary/pages/Summarypg.js","summary/components/SummaryDetail.js"],"names":["UserSummary","useState","LoadedSummary","setLoadedSummary","useHttpClient","isLoading","error","sendRequest","clearError","summaryId","useParams","useEffect","a","process","responseData","console","log","summarybyid","fetchSummary","Fragment","onClear","className","key","id","image","summary_cover","title","summary_title","description","book_description","body","summary_body","creatorId","creator_id","SummaryDetail","props","auth","useContext","AuthContext","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","Authorization","token","onDelete","show","onCancel","header","footerClass","footer","inverse","onClick","danger","asOverlay","src","alt","userId","to"],"mappings":"oOAiEeA,UAnDK,WAAO,IAAD,EAGkBC,qBAHlB,mBAGjBC,EAHiB,KAGFC,EAHE,OAI8BC,cAA9CC,EAJgB,EAIhBA,UAAWC,EAJK,EAILA,MAAOC,EAJF,EAIEA,YAAaC,EAJf,EAIeA,WAEjCC,EAAYC,cAAYD,UAkB9B,OAhBAE,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAEUL,EACzBM,kCAAA,sBAAiDJ,IAHlC,OAEXK,EAFW,OAKjBC,QAAQC,IAAIF,EAAaG,aACzBd,EAAiBW,EAAaG,aANb,yGAAH,qDAUlBC,KACC,CAACX,EAAaE,IAKf,kBAAC,IAAMU,SAAP,KACE,kBAAC,IAAD,CAAYb,MAAOA,EAAOc,QAASZ,IAClCH,GACC,yBAAKgB,UAAU,UACb,kBAAC,IAAD,QAGFhB,GAAaH,GACb,wBAAImB,UAAU,gBAEd,kBAAC,IAAD,CACAC,IAAKpB,EAAcqB,GACnBA,GAAIrB,EAAcqB,GAClBC,MAAOtB,EAAcuB,cACrBC,MAAOxB,EAAcyB,cACrBC,YAAa1B,EAAc2B,iBAC3BC,KAAM5B,EAAc6B,aACpBC,UAAW9B,EAAc+B,iB,gJC0ClBC,IAvFO,SAAAC,GAAU,IAAD,EACyB/B,cAA9CC,EADqB,EACrBA,UAAkBE,GADG,EACVD,MADU,EACHC,aACpB6B,GAFuB,EACU5B,WAC1B6B,qBAAWC,MAFK,EAImBrC,oBAAS,GAJ5B,mBAItBsC,EAJsB,KAIJC,EAJI,KAYvBC,EAAsB,WAC1BD,GAAoB,IAGhBE,EAAoB,uCAAG,sBAAA9B,EAAA,6DAC3B4B,GAAoB,GADO,kBAGnBjC,EAAYM,kCAAA,sBACDsB,EAAMZ,IACrB,SACA,KACA,CACEoB,cAAe,UAAYP,EAAKQ,QARX,OAWzBT,EAAMU,SAASV,EAAMZ,IAXI,uGAAH,qDAe1B,OACE,kBAAC,IAAMJ,SAAP,KAEE,kBAAC,IAAD,CACE2B,KAAMP,EACNQ,SAAUN,EACVO,OAAO,gBACPC,YAAY,4BACZC,OACE,kBAAC,IAAM/B,SAAP,KACE,kBAAC,IAAD,CAAQgC,SAAO,EAACC,QAASX,GAAzB,UAGA,kBAAC,IAAD,CAAQY,QAAM,EAACD,QAASV,GAAxB,YAMJ,+HAKF,wBAAIrB,UAAU,cACZ,kBAAC,IAAD,CAAMA,UAAU,uBACbhB,GAAa,kBAAC,IAAD,CAAgBiD,WAAS,IACvC,yBAAKjC,UAAU,qBACb,yBACEkC,IAAK1C,kCAAA,UAAqCsB,EAAMX,OAChDgC,IAAKrB,EAAMT,SAGf,yBAAKL,UAAU,oBACb,4BAAKc,EAAMT,OACX,4BAAKS,EAAML,MACX,2BAAIK,EAAMP,cAEZ,yBAAKP,UAAU,uBAEZe,EAAKqB,SAAWtB,EAAMH,WACrB,kBAAC,IAAD,CAAQ0B,GAAE,mBAAcvB,EAAMZ,KAA9B,QAGDa,EAAKqB,SAAWtB,EAAMH,WACrB,kBAAC,IAAD,CAAQqB,QAAM,EAACD,QApEM,WAC/BZ,GAAoB,KAmEV,gB","file":"static/js/3.9924da6f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\nimport SummaryDetail from '../components/SummaryDetail';\n\nimport Summarypg from './Summarypg.css';\n\n\nconst UserSummary = () => {\n\n\n  const [LoadedSummary, setLoadedSummary] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const summaryId = useParams().summaryId;\n\n  useEffect(() => {\n    const fetchSummary = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL+`api/summary/${summaryId}`\n        );\n        console.log(responseData.summarybyid);\n        setLoadedSummary(responseData.summarybyid);\n        \n      } catch (err) {}\n    };\n    fetchSummary();\n  }, [sendRequest, summaryId]);\n\n \n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && LoadedSummary && (\n        <ul className=\"nice-display\">\n\n        <SummaryDetail\n        key={LoadedSummary.id}\n        id={LoadedSummary.id}\n        image={LoadedSummary.summary_cover}\n        title={LoadedSummary.summary_title}\n        description={LoadedSummary.book_description}\n        body={LoadedSummary.summary_body}\n        creatorId={LoadedSummary.creator_id}\n      />\n       </ul>\n\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserSummary;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './SummaryDetail.css';\n\nconst SummaryDetail = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  \n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(process.env.REACT_APP_BACKEND_URL+\n        `api/summary/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      \n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this summary? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={process.env.REACT_APP_BACKEND_URL+`${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.body}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            \n            {auth.userId === props.creatorId && (\n              <Button to={`/summary/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SummaryDetail;\n"],"sourceRoot":""}